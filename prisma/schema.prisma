// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Privacy {
  PRIVATE
  PUBLIC
}

model User {
  id                   String     @id @default(uuid())
  email                String     @unique
  firstname            String
  lastname             String
  middlename           String?
  password             String
  isEmailVerified      Boolean    @default(false)
  resetPasswordToken   String?    @unique
  resetPasswordExpires String?    @unique
  token                Token[]
  ownedNotebooks       NoteBook[] @relation(name: "ownerNotebooks")
  sharedNotebooks      NoteBook[] @relation(name: "sharedNotebooks")
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @updatedAt
}

model Token {
  id        String   @id @default(uuid())
  token     String   @unique
  expiresAt String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
}

model NoteBook {
  id          String   @id @default(uuid())
  title       String
  content     String
  privacy     Privacy  @default(PRIVATE)
  ownerId     String
  owner       User     @relation(name: "ownerNotebooks", fields: [ownerId], references: [id], onDelete: Cascade)
  sharedUsers User[]   @relation(name: "sharedNotebooks")
  tags        Tag[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Tag {
  id        String     @id @default(uuid())
  name      String    @unique  
  notes     NoteBook[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}
